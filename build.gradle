plugins {
    id 'maven'
    id 'java'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'net.researchgate.release' version '2.6.0'
    id 'eclipse'
}


apply from: 'code-style/codestyle.gradle'

def coreFixtureVersion = "4.2.0"

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.18'
	compile 'org.apache.logging.log4j:log4j-core:2.5'
	compile 'org.apache.logging.log4j:log4j-api:2.5'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'
	compile 'io.inbot:inbot-testfixtures:1.8'
	// for JUnit5
	testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
    compile 'com.google.guava:guava:23.6-jre'
	testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.6'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.6'
    compile "org.testeditor.fixture:core-fixture:$coreFixtureVersion"
    compile 'com.google.code.gson:gson:2.8.2'
}

//sourceSets.main.resources.srcDirs = [ "src/main/java" , "src/main/resources"]
sourceSets.main.resources.includes = [ "**/*.csv" ]


/*
 * code below copied from core-fixture
 */
repositories {
    jcenter()
}

group = 'org.testeditor.fixture'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// show standard out during test to see logging output
test.testLogging.showStandardStreams = true

jar {
    manifest {
        attributes 'Implementation-Title': "${project.group}.${project.name}",
                   'Implementation-Version': project.version
    }
}

// this activates JUnit5 for testing ;0)
test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.packaging = 'jar'
    }
}

release {
    preTagCommitMessage = '[release]'
    tagCommitMessage = '[release]'
    newVersionCommitMessage = '[release] new version'
    tagTemplate = 'v${version}'
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'Fixtures'
        name = project.name
        userOrg = 'test-editor'
        licenses = ['EPL-1.0']
        vcsUrl = "https://github.com/test-editor/${project.name}.git"
        version {
            name = project.version
            vcsTag = "v$project.version"
        }
        websiteUrl = 'http://testeditor.org'
    }
}
